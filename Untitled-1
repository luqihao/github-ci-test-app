本周因为版本需求没出，所以主要是已学习为主，分为以下两点：
1. 完善自己之前搭的GitHub webhooks服务器，模仿实践项目多分支自动化发布打包部署测试的方案
2. 对网站切换主题肤色的调研学习。想起以前element-ui网站有个换主题色的功能，在调色盘选择一种颜色整个网站所有组件的主题色都会发生改变，
如果换到自己的项目要如何实现，如果是用现在的css预处理方案（scss\less）的话感觉不知道怎么实现，自己的想法是js设置颜色变量，通过动态改变颜色变量而改变网站主题色，
并且涉及到颜色样式的元素都必须使用内联样式才能够实现这种效果，最终自己借助的react的context上下文和style来实现了一遍，效果是出来了，但发现如果网站用了某个ui库
的话就完蛋了，全部组件都要重新写内联样式覆盖一遍，感觉就没什么必要了。所以主题换肤还是得跟着ui库提供的方案走。
比如element-ui是把颜色css值换成关键字，根据用户选择的
主题色生成对应的颜色值，再替换到关键字上，然后暴力的在页面加style标签，把生成的样式填进去就ok了。
antd-ui则提供webpack配置less变量的方式，最符合自己思路的还是material-ui的方式，因为它本身就使用css-in-js的方式去编写样式，所以在替换主题色的时候就非常方便了，但缺点
也很明显，css-in-js伪类的支持还是比较弱的，编写习惯也是另一个问题。各有各的优劣吧，最终还是得根据实际情况去选择...
